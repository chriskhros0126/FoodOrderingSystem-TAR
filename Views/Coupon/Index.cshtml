@model IEnumerable<FoodOrderingSystem.Models.Coupon>

@{
    ViewData["Title"] = "Coupons";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Coupon Management</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Create New Coupon
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Code)</th>
                            <th>@Html.DisplayNameFor(model => model.DiscountValue)</th>
                            <th>@Html.DisplayNameFor(model => model.ValidFrom)</th>
                            <th>@Html.DisplayNameFor(model => model.ValidUntil)</th>
                            <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            var isExpired = DateTime.Now > item.ValidUntil;
                            var notStarted = DateTime.Now < item.ValidFrom;
                            var statusClass = item.IsActive 
                                ? (isExpired ? "bg-danger" : (notStarted ? "bg-warning" : "bg-success"))
                                : "bg-secondary";
                            var statusText = item.IsActive 
                                ? (isExpired ? "Expired" : (notStarted ? "Not Started" : "Active"))
                                : "Inactive";
                                
                            <tr>
                                <td><span class="fw-bold">@item.Code</span></td>
                                <td>@item.DiscountValue.ToString("F0")%</td>
                                <td>@item.ValidFrom.ToString("MMM dd, yyyy")</td>
                                <td>@item.ValidUntil.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @if (item.IsActive)
                                    {
                                        <span class="badge bg-success">Yes</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">No</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.CouponId" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.CouponId" class="btn btn-sm btn-outline-info">
                                            <i class="bi bi-info-circle"></i> Details
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.CouponId" class="btn btn-sm btn-outline-danger">
                                            <i class="bi bi-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
