@model IEnumerable<FoodOrderingSystem.Models.InventoryItem>

@{
    ViewData["Title"] = "Inventory Management";
    var lowStockCount = ViewBag.LowStockCount ?? 0;
}

@if (lowStockCount > 0)
{
    <div class="alert alert-warning mb-4">
        <div class="d-flex align-items-center">
            <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
            <div>
                <h5 class="alert-heading mb-1">Low Stock Warning</h5>
                <p class="mb-0">There are @lowStockCount item(s) below their threshold levels.</p>
            </div>
        </div>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        <i class="fas fa-warehouse me-2"></i>Inventory Items
    </h1>
    <div>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus me-1"></i> Add New
        </a>
        <a asp-action="Dashboard" class="btn btn-info ms-2">
            <i class="fas fa-tachometer-alt me-1"></i> Dashboard
        </a>
        @if (lowStockCount > 0)
        {
            <a asp-action="LowStock" class="btn btn-warning ms-2">
                <i class="fas fa-exclamation-circle me-1"></i> Low Stock (@lowStockCount)
            </a>
        }
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Item Name</th>
                <th>Category</th>
                <th>Stock Level</th>
                <th>Unit</th>
                <th>Threshold</th>
                <th>Last Updated</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@(item.CurrentStock <= item.Threshold ? "table-warning" : "")">
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category)</td>
                    <td class="@(item.CurrentStock <= item.Threshold ? "fw-bold" : "")">
                        @Html.DisplayFor(modelItem => item.CurrentStock)
                        @if (item.CurrentStock <= item.Threshold)
                        {
                            <span class="badge bg-warning ms-2">Low</span>
                        }
                        else if (item.CurrentStock <= 0)
                        {
                            <span class="badge bg-danger ms-2">Out</span>
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Unit)</td>
                    <td>@Html.DisplayFor(modelItem => item.Threshold)</td>
                    <td>@item.LastUpdated.ToString("g")</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>