@{
    ViewData["Title"] = "Dish Reports";
}

<div class="container">
    <h1 class="mb-4">Dish Reports & Statistics</h1>

    <div class="row">
        <!-- Charts Section -->
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Dish Statistics</h5>
                        <div class="btn-group">
                            <button class="btn btn-outline-primary" onclick="switchChart('popularity')">Popularity</button>
                            <button class="btn btn-outline-primary" onclick="switchChart('category')">Categories</button>
                            <button class="btn btn-outline-primary" onclick="switchChart('availability')">Availability</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="dishChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let currentChart = null;
        let currentChartType = 'popularity';

        async function loadChartData() {
            try {
                const response = await fetch('/Reports/GetDishStatistics');
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error loading chart data:', error);
                return null;
            }
        }

        async function switchChart(type) {
            currentChartType = type;
            const data = await loadChartData();
            if (!data) return;

            if (currentChart) {
                currentChart.destroy();
            }

            const ctx = document.getElementById('dishChart').getContext('2d');
            let chartData = {};

            switch (type) {
                case 'popularity':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            label: 'Average Popularity',
                            data: data.map(d => d.AveragePopularity),
                            backgroundColor: 'rgba(54, 162, 235, 0.5)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'bar',
                        data: chartData,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                    break;

                case 'category':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            data: data.map(d => d.Count),
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(255, 206, 86, 0.5)',
                                'rgba(75, 192, 192, 0.5)',
                                'rgba(153, 102, 255, 0.5)'
                            ]
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'pie',
                        data: chartData,
                        options: {
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            }
                        }
                    });
                    break;

                case 'availability':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            label: 'Available',
                            data: data.map(d => d.AvailableCount),
                            backgroundColor: 'rgba(75, 192, 192, 0.5)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Total',
                            data: data.map(d => d.Count),
                            backgroundColor: 'rgba(153, 102, 255, 0.5)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'bar',
                        data: chartData,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    stacked: false
                                },
                                x: {
                                    stacked: false
                                }
                            }
                        }
                    });
                    break;
            }
        }

        // Load initial chart when page loads
        document.addEventListener('DOMContentLoaded', () => {
            switchChart('popularity');
        });
    </script>
} 