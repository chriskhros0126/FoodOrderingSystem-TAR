@{
    ViewData["Title"] = "Dish Reports";
}

<div class="container">
    <h1 class="mb-4">Dish Reports & Statistics</h1>
    
    <!-- Add button to seed demo data -->
    <div class="alert alert-info mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <span>
                <i class="fas fa-info-circle"></i> 
                If charts are empty, you may need to seed some demo data.
            </span>
            <a href="/Reports/SeedDemoData" class="btn btn-primary btn-sm">
                <i class="fas fa-database"></i> Seed Demo Data
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Sales Analytics Section -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Sales Analytics</h5>
                        <div class="btn-group">
                            <button class="btn btn-outline-primary" onclick="loadSalesData('daily')">Daily</button>
                            <button class="btn btn-outline-primary" onclick="loadSalesData('weekly')">Weekly</button>
                            <button class="btn btn-outline-primary" onclick="loadSalesData('monthly')">Monthly</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="salesChart"></canvas>
                    <div id="salesNoDataMessage" class="text-center text-muted py-5" style="display: none;">
                        <p>No sales data available for the selected period.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dish Order Counts Section -->
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Dish Order Counts</h5>
                        <div class="btn-group">
                            <button class="btn btn-outline-primary" onclick="loadDishOrderCounts('daily')">Daily</button>
                            <button class="btn btn-outline-primary" onclick="loadDishOrderCounts('weekly')">Weekly</button>
                            <button class="btn btn-outline-primary" onclick="loadDishOrderCounts('monthly')">Monthly</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="dishOrderChart"></canvas>
                    <div id="dishOrderNoDataMessage" class="text-center text-muted py-5" style="display: none;">
                        <p>No order data available for the selected period.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Original Charts Section -->
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Dish Statistics</h5>
                        <div class="btn-group">
                            <button class="btn btn-outline-primary" onclick="switchChart('popularity')">Popularity</button>
                            <button class="btn btn-outline-primary" onclick="switchChart('category')">Categories</button>
                            <button class="btn btn-outline-primary" onclick="switchChart('availability')">Availability</button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <canvas id="dishChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Original chart code remains the same
        let currentChart = null;
        let currentChartType = 'popularity';

        async function loadChartData() {
            try {
                const response = await fetch('/Reports/GetDishStatistics');
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error loading chart data:', error);
                return null;
            }
        }

        async function switchChart(type) {
            currentChartType = type;
            const data = await loadChartData();
            if (!data) return;

            if (currentChart) {
                currentChart.destroy();
            }

            const ctx = document.getElementById('dishChart').getContext('2d');
            let chartData = {};

            switch (type) {
                case 'popularity':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            label: 'Average Popularity',
                            data: data.map(d => d.AveragePopularity),
                            backgroundColor: 'rgba(54, 162, 235, 0.5)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'bar',
                        data: chartData,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                    break;

                case 'category':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            data: data.map(d => d.Count),
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.5)',
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(255, 206, 86, 0.5)',
                                'rgba(75, 192, 192, 0.5)',
                                'rgba(153, 102, 255, 0.5)'
                            ]
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'pie',
                        data: chartData,
                        options: {
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            }
                        }
                    });
                    break;

                case 'availability':
                    chartData = {
                        labels: data.map(d => d.Category),
                        datasets: [{
                            label: 'Available',
                            data: data.map(d => d.AvailableCount),
                            backgroundColor: 'rgba(75, 192, 192, 0.5)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }, {
                            label: 'Total',
                            data: data.map(d => d.Count),
                            backgroundColor: 'rgba(153, 102, 255, 0.5)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 1
                        }]
                    };
                    currentChart = new Chart(ctx, {
                        type: 'bar',
                        data: chartData,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    stacked: false
                                },
                                x: {
                                    stacked: false
                                }
                            }
                        }
                    });
                    break;
            }
        }

        // New functions for sales analytics and dish order counts
        let salesChart = null;
        let dishOrderChart = null;

        async function loadSalesData(period) {
            try {
                const response = await fetch(`/Reports/GetSalesAnalytics?period=${period}`);
                const data = await response.json();
                
                const noDataMsg = document.getElementById('salesNoDataMessage');
                const chartCanvas = document.getElementById('salesChart');
                
                if (!data || data.length === 0) {
                    noDataMsg.style.display = 'block';
                    chartCanvas.style.display = 'none';
                    return;
                }
                
                noDataMsg.style.display = 'none';
                chartCanvas.style.display = 'block';

                if (salesChart) {
                    salesChart.destroy();
                }

                const ctx = document.getElementById('salesChart').getContext('2d');

                salesChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: data.map(item => {
                            const date = new Date(item.Date);
                            return period === 'monthly'
                                ? date.toLocaleDateString('default', { month: 'short', day: 'numeric' })
                                : date.toLocaleDateString('default', { weekday: 'short', day: 'numeric' });
                        }),
                        datasets: [{
                            label: 'Total Sales',
                            data: data.map(item => item.TotalSales),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2,
                            tension: 0.1,
                            yAxisID: 'y'
                        }, {
                            label: 'Order Count',
                            data: data.map(item => item.OrderCount),
                            backgroundColor: 'rgba(153, 102, 255, 0.2)',
                            borderColor: 'rgba(153, 102, 255, 1)',
                            borderWidth: 2,
                            tension: 0.1,
                            yAxisID: 'y1'
                        }]
                    },
                    options: {
                        responsive: true,
                        interaction: {
                            mode: 'index',
                            intersect: false,
                        },
                        scales: {
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                title: {
                                    display: true,
                                    text: 'Total Sales ($)'
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                title: {
                                    display: true,
                                    text: 'Order Count'
                                },
                                grid: {
                                    drawOnChartArea: false,
                                },
                            },
                        }
                    }
                });
            } catch (error) {
                console.error('Error loading sales data:', error);
                document.getElementById('salesNoDataMessage').style.display = 'block';
                document.getElementById('salesChart').style.display = 'none';
            }
        }

        async function loadDishOrderCounts(period) {
            try {
                const response = await fetch(`/Reports/GetDishOrderCounts?period=${period}`);
                const data = await response.json();
                
                const noDataMsg = document.getElementById('dishOrderNoDataMessage');
                const chartCanvas = document.getElementById('dishOrderChart');
                
                if (!data || data.length === 0) {
                    noDataMsg.style.display = 'block';
                    chartCanvas.style.display = 'none';
                    return;
                }
                
                noDataMsg.style.display = 'none';
                chartCanvas.style.display = 'block';

                if (dishOrderChart) {
                    dishOrderChart.destroy();
                }

                const ctx = document.getElementById('dishOrderChart').getContext('2d');

                // Sort by order count and take top 10
                const sortedData = data.sort((a, b) => b.OrderCount - a.OrderCount).slice(0, 10);

                dishOrderChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: sortedData.map(item => item.DishName),
                        datasets: [{
                            label: 'Order Count',
                            data: sortedData.map(item => item.OrderCount),
                            backgroundColor: 'rgba(255, 159, 64, 0.7)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1,
                            yAxisID: 'y'
                        }, {
                            label: 'Total Revenue ($)',
                            data: sortedData.map(item => item.TotalRevenue),
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1,
                            type: 'line',
                            yAxisID: 'y1'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Top 10 Dishes by Order Count'
                            },
                        },
                        scales: {
                            y: {
                                type: 'linear',
                                display: true,
                                position: 'left',
                                title: {
                                    display: true,
                                    text: 'Order Count'
                                }
                            },
                            y1: {
                                type: 'linear',
                                display: true,
                                position: 'right',
                                title: {
                                    display: true,
                                    text: 'Revenue ($)'
                                },
                                grid: {
                                    drawOnChartArea: false,
                                },
                            },
                        }
                    }
                });
            } catch (error) {
                console.error('Error loading dish order counts:', error);
                document.getElementById('dishOrderNoDataMessage').style.display = 'block';
                document.getElementById('dishOrderChart').style.display = 'none';
            }
        }

        // Load all charts when page loads
        document.addEventListener('DOMContentLoaded', () => {
            switchChart('popularity');
            loadSalesData('daily');
            loadDishOrderCounts('daily');
        });
    </script>
}